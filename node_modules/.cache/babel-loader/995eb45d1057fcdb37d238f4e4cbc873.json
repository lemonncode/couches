{"remainingRequest":"/Users/noelia/Documents/git_lemonn/Coach/node_modules/babel-loader/lib/index.js!/Users/noelia/Documents/git_lemonn/Coach/src/store/modules/requests/actions.js","dependencies":[{"path":"/Users/noelia/Documents/git_lemonn/Coach/src/store/modules/requests/actions.js","mtime":1644250853792},{"path":"/Users/noelia/Documents/git_lemonn/Coach/babel.config.js","mtime":1598433744000},{"path":"/Users/noelia/Documents/git_lemonn/Coach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/noelia/Documents/git_lemonn/Coach/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9ub2VsaWEvRG9jdW1lbnRzL2dpdF9sZW1vbm4vQ29hY2gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8taXNvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmRhdGUudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmpzb24uc3RyaW5naWZ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbnRhY3RDb2FjaDogZnVuY3Rpb24gY29udGFjdENvYWNoKGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBuZXdSZXF1ZXN0LCByZXNwb25zZSwgcmVzcG9uc2VEYXRhLCBlcnJvcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIG5ld1JlcXVlc3QgPSB7CiAgICAgICAgICAgICAgICBpZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLAogICAgICAgICAgICAgICAgY29hY2hJZDogcGF5bG9hZC5jb2FjaElkLAogICAgICAgICAgICAgICAgdXNlckVtYWlsOiBwYXlsb2FkLmVtYWlsLAogICAgICAgICAgICAgICAgbWVzc2FnZTogcGF5bG9hZC5tZXNzYWdlCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHBzOi8vdGVzdGNvdWNoLWU0NzQ3LWRlZmF1bHQtcnRkYi5maXJlYmFzZWlvLmNvbS9yZXF1ZXN0cy8iLmNvbmNhdChwYXlsb2FkLmNvYWNoSWQsICIuanNvbiIpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG5ld1JlcXVlc3QpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmVzcG9uc2VEYXRhID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGVycm9yID0gbmV3IEVycm9yKHJlc3BvbnNlLmZvcm1EYXRhLm1lc3NhZ2UgfHwgIkZhaWxlZCB0byBzZW5kIHJlcXVlc3QuIik7CiAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIG5ld1JlcXVlc3QuaWQgPSByZXNwb25zZURhdGEubmFtZTsKICAgICAgICAgICAgICBuZXdSZXF1ZXN0LmNvYWNoSWQgPSBwYXlsb2FkLmNvYWNoSWQ7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoImFkZFJlcXVlc3QiLCBuZXdSZXF1ZXN0KTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBmZXRjaFJlcXVlc3RzOiBmdW5jdGlvbiBmZXRjaFJlcXVlc3RzKGNvbnRleHQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29hY2hJZDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb2FjaElkID0gY29udGV4dC5yb290R2V0dGVycy51c2VySWQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gZmV0Y2g7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiAiaHR0cHM6Ly90ZXN0Y291Y2gtZTQ3NDctZGVmYXVsdC1ydGRiLmZpcmViYXNlaW8uY29tL3JlcXVlc3RzLyIuY29uY2F0KGNvYWNoSWQsICIuanNvbiIpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF9jb250ZXh0Mi50MSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICgwLCBfY29udGV4dDIudDApKF9jb250ZXh0Mi50MSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/noelia/Documents/git_lemonn/Coach/src/store/modules/requests/actions.js"],"names":["contactCoach","context","payload","newRequest","id","Date","toISOString","coachId","userEmail","email","message","fetch","method","body","JSON","stringify","response","json","responseData","ok","error","Error","formData","name","commit","fetchRequests","rootGetters","userId"],"mappings":";;;;;;;;;AAAA,eAAe;AACPA,EAAAA,YADO,wBACMC,OADN,EACeC,OADf,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,cAAAA,UAD6B,GAChB;AACjBC,gBAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EADa;AAEjBC,gBAAAA,OAAO,EAAEL,OAAO,CAACK,OAFA;AAGjBC,gBAAAA,SAAS,EAAEN,OAAO,CAACO,KAHF;AAIjBC,gBAAAA,OAAO,EAAER,OAAO,CAACQ;AAJA,eADgB;AAAA;AAAA,qBAOZC,KAAK,wEACsCT,OAAO,CAACK,OAD9C,YAE1B;AACEK,gBAAAA,MAAM,EAAE,MADV;AAEEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,UAAf;AAFR,eAF0B,CAPO;;AAAA;AAO7Ba,cAAAA,QAP6B;AAAA;AAAA,qBAcRA,QAAQ,CAACC,IAAT,EAdQ;;AAAA;AAc7BC,cAAAA,YAd6B;;AAAA,kBAgB9BF,QAAQ,CAACG,EAhBqB;AAAA;AAAA;AAAA;;AAiB3BC,cAAAA,KAjB2B,GAiBnB,IAAIC,KAAJ,CACZL,QAAQ,CAACM,QAAT,CAAkBZ,OAAlB,IAA6B,yBADjB,CAjBmB;AAAA,oBAoB3BU,KApB2B;;AAAA;AAsBnCjB,cAAAA,UAAU,CAACC,EAAX,GAAgBc,YAAY,CAACK,IAA7B;AACApB,cAAAA,UAAU,CAACI,OAAX,GAAqBL,OAAO,CAACK,OAA7B;AACAN,cAAAA,OAAO,CAACuB,MAAR,CAAe,YAAf,EAA6BrB,UAA7B;;AAxBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBpC,GA1BY;AA2BPsB,EAAAA,aA3BO,yBA2BOxB,OA3BP,EA2BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBM,cAAAA,OADqB,GACXN,OAAO,CAACyB,WAAR,CAAoBC,MADT;AAAA,6BAE3BhB,KAF2B;AAAA;AAAA,4FAG6CJ,OAH7C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK5B;AAhCY,CAAf","sourcesContent":["export default {\n  async contactCoach(context, payload) {\n    const newRequest = {\n      id: new Date().toISOString(),\n      coachId: payload.coachId,\n      userEmail: payload.email,\n      message: payload.message,\n    };\n    const response = await fetch(\n      `https://testcouch-e4747-default-rtdb.firebaseio.com/requests/${payload.coachId}.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(newRequest),\n      }\n    );\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      const error = new Error(\n        response.formData.message || \"Failed to send request.\"\n      );\n      throw error;\n    }\n    newRequest.id = responseData.name;\n    newRequest.coachId = payload.coachId;\n    context.commit(\"addRequest\", newRequest);\n  },\n  async fetchRequests(context) {\n    const coachId = context.rootGetters.userId;\n    fetch(\n      await `https://testcouch-e4747-default-rtdb.firebaseio.com/requests/${coachId}.json`\n    );\n  },\n};\n"]}]}